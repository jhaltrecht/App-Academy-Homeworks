q
col
row
c
q
col+dy
col
potNewPosition
row
row+potNewPosition
s
q
col+dy+dy
row+dx+dx
row
dy+dy
dx+dx
q
n
c
s
q
pos
s
q
row+dx
q
col
row+dx
row
q
row+1
col
row
s
col
row
q
row
dx+dx
dx
row
col+dy
col+dx
row+dx
col
row
row+dx
dx+dx
q
col
row
[row+dx,col+dy]
dy
col
col+dy
row+dx
row,col=@pos
pos
row
row+dx
q
row
3+dx
row+dx
q
potNewPosition
q
potNewPosition
pos
col
row
potNewPosition
s
row+dx
row
q
dx
row
potNewPosition
row
row+dx
c
q
dx
display potNewPosition
q
display potNewPosition
potNewPosition
s
q
newArr
unblockMovesArr+=grow_unblocked_moves_in_dir(dx+dx,dy+dy)
unblockMovesArr
n
c
s
n
s
unblockMovesArr
n
q
c
s
q
@board.valid_pos?(potNewPosition) && @board.empty?(potNewPosition)
unblockMovesArr
@board[[3,5]]
@board[3,5]
@board
q
@board.empty?(potNewPosition)
 @board.valid_pos?(potNewPosition)
@color!= @board[potNewPosition].color 
unblockMovesArr
c
s
c
s
c
s
display unblockMovesArr
q
potNewPosition
display unblockMovesArr
q
unblockMovesArr
q
movesArr
q
c
n
potNewPosition
n
potNewPosition
c
s
q
c
potNewPosition
s
potNewPosition
s
self[pos]==nil
s
col
row
s
q
self.color!= @board[potNewPosition].color && @board.valid_pos?(potNewPosition)
s
row
s
col
row
s
potNewPosition
s
unblockMovesArr<<potNewPosition
s
@board.valid_pos?(potNewPosition) && @board.empty?(potNewPosition)
s
[row+dx,col+dy]
s
dx
@pos
s
dy
dx
s
n
row
row+dx
c
n
s
c
n
self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
if self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
col
row
s
col
row
row,col=pos
q
row
 if self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
q
row
 row,col=pos
pos
row
pos
self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
if self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
 return true  if self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
row>=0
self[pos]==nil
self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
q
s
self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
return true  if self[pos]==nil && row>=0 && row<=7 && col>=0 && col<=7
row>=0
q
@board[potNewPosition]
potNewPosition
@board
@board[potNewPosition].pos
s
@pos
s
@board
q
@board
c
q
@board
c
quit
@board
c
s
q
@board
@board[potNewPosition]
s
row
col
potNewPosition
unblockMovesArr<<@board[potNewPosition]
q
s
c
q
@board
potNewPosition
s
q
s
q
c
n
movesArrsdf
n
c
s
@pos
s
movesArr+=grow_unblocked_moves_in_dir(dx,dy)
movesArr
s
move_directions
s
