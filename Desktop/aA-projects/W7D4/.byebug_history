c
q
game.player_name(0)
c
q
game.player_name(0)
q
player_name(0)
q
name(0)
q
c
q
@deck.cards.length
@deck.count
@deck.size
@deck.length
@deck
q
@cards
q
@hand<<card
@hand
card
q
@hand
@hand.value
@hand.rank
@hand
q
standard.hand
standard
standard.hand
q
player_card>other_player_card
other_player_card
player_card
player_card_rank>other_player_card_rank
n
q
n
count.key(keyParam) 
count
q
count
q
count.key(3)
count
player_card
n
count
q
@hand.value.find_index(player_card)
@hand[-1].class
@hand[-1].is_a?(Integer)
@hand[-1].is_a?(String)
@hand[-1]
@hand.find_index(player_card)
@hand
@hand.find_index(player_card)
@hand.find(player_card)
player_card
n
q
count
player_card
player_card.rank
q
@hand_value
other_hand_count
other_hand_count.key(@hand_value)
@hand_value
q
c
q
c
q
@hand[0].value
@hand.each_with_index.all?{|card,idx| card.value==other_hand[idx].value}
@hand.each_with_index.all?
@hand
q
s
@hand.each_with_index
q
self.hand_value
@hand.hand_value
@hand
q
@hand
@hand.hand_value
q
other_hand.hand_value
@hand.hand_value
c
return @hand_value=8
@hand
c
is_a_pair?
c
n
@hand
c
@hand
c
display @hand
@hand
c
is_a_pair?
@hand
c
n
is_a_pair?
@hand
c
n
@hand
is_a_pair?
q
n
@hand
@hnad
@Hnad
n
is_a_two_pair?
n
@hand
@hnad
n
is_a_three_of_a_kind?
n
@hand
n
@hand
n
@hand
is_a_flush?
s
q
v==2
v!=2
[v]
v
v!=2 || v!=3
if v!=2 || v!=3
s
display v
n
s
q
n
return false if v!=2 || v!=3
display v
v
s
count
n
s
@hand
s
is_a_full_house?
q
@hand
s
c
is_a_four_of_a_kind?
s
@hand
c
q
qy
is_a_four_of_a_kind?
@hand
Whand
s
c
is_a_four_of_a_kind?
@hand
s
q
n
s
c
@hand
n
@hand
n
is_a_four_of_a_kind?
n
@hand
s
c
n
s
display hand
q
n
display @hand_value
hands
c
s
q
is_a_straight?
q
s
@hand[3]
@hand
q
@hand
q
c
s
@hand[-1].value=="A" && @hand.first.value=="2" && idx==3
idx==3
@hand.first.value=="2"
@hand[-1].value=="A"
if @hand[-1].value=="A" && @hand.first.value=="2" && idx==3
q
qy
@hand[-1].value=="A"
@hand[-1]
@hand[-1]=="A"
@hand[-1]=="A" && @hand.first.value=="2" && idx==3
q
s
n
display idx
display @hand
